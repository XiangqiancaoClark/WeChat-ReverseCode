//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MMLiveAnchorSEISynchronizeDelegate-Protocol.h"
#import "MMLiveAnchorSEISynchronizeExt-Protocol.h"
#import "MMLiveCDNPlayerItemDelegate-Protocol.h"
#import "MMLiveConflictHandling-Protocol.h"
#import "MMLiveManagerMetricsDelegate-Protocol.h"
#import "MMLiveViewDelegate-Protocol.h"
#import "TRTCCloudDelegate-Protocol.h"
#import "TRTCCloudManagerDelegate-Protocol.h"

@class CdnTransInfo, LiveInfo, LiveSdkAudioParams, LiveSdkChannelParams, LiveSdkInfo, LiveSdkVideoParams, MMLiveAnchorStatusItem, MMLiveBeautyLogic, MMLiveCDNPlayerItem, MMLiveCommentDataRefreshConfig, MMLiveManger, MMLiveTaskId, MMLiveView, MMTimer, MMWeEffectManager, NSArray, NSData, NSError, NSMutableArray, NSMutableDictionary, NSString, TRTCCloud, TRTCCloudManager, TRTCParams, TRTCRemoteUserManager, UINavigationController, UIView;
@protocol MMLiveTaskDelegate;

@interface MMLiveTask : NSObject <TRTCCloudDelegate, MMLiveViewDelegate, MMLiveCDNPlayerItemDelegate, TRTCCloudManagerDelegate, MMLiveAnchorSEISynchronizeExt, MMLiveConflictHandling, MMLiveAnchorSEISynchronizeDelegate, MMLiveManagerMetricsDelegate>
{
    MMLiveManger *_liveManagerInstance;
    _Bool _secondaryDeviceCloseLiveSwitch;
    _Bool _isScreenLive;
    _Bool _isInRoom;
    _Bool _isDefaultCDNPlay;
    _Bool _isLivePlayingViaCdn;
    _Bool _isLocalAudioStarted;
    _Bool _isLiveClosed;
    _Bool _isFaceVerifying;
    _Bool _isTakingLivePhoto;
    _Bool _isLivePaused;
    _Bool _isLiveUnablePlay;
    _Bool _isLiveMuteForIntterupt;
    _Bool _isLiveMuteForSysIntterupt;
    _Bool _isLiveMuteForOuter;
    _Bool _isReleaseMonoService;
    _Bool _isAnchorOpenAfterCrash;
    _Bool _isVideoConnectedMic;
    _Bool _isUsingCamera;
    _Bool _isOnlineStateButtonDisabled;
    _Bool _isAllowLiveReward;
    _Bool _isAllowConnectMic;
    _Bool _isPreBanComment;
    _Bool _isPreBanLike;
    _Bool _isBanLikeStatusChanged;
    _Bool _isMicMuted;
    _Bool _isPureAudioMode;
    _Bool _isAllowSettingBGMusic;
    _Bool _isRulePoped;
    _Bool _isEnableComment;
    _Bool _useCachedPlayingDataItemWhenEnterLive;
    _Bool _isInBackgroundFlag;
    _Bool _isLiveQosReportEnabled;
    _Bool _isLiveQosControlEnabled;
    _Bool _isFrontCamera;
    _Bool _isFrontCameraMirrored;
    _Bool _isHEVCEncEnable;
    _Bool _isHEVCEncUsing;
    _Bool _useCustomVideoEncodeResolution;
    _Bool _isAntiAddictPause;
    _Bool _ignoreCacheClarity;
    _Bool _isViewCapturing;
    _Bool _isVideoParamSetOK;
    _Bool _isAudioParamSetOK;
    _Bool _enableCustomEffect;
    _Bool _isLiveAfterAbnormalExit;
    _Bool _isPlayerReportExtended;
    _Bool _hasStartedSyncAnchorSEIUserStatus;
    _Bool _hasSetPureAudioModeForAudience;
    _Bool _enableSwitchStream;
    _Bool _forceHEVCMixing;
    _Bool _cdnPlayerItemHasEverStartedPlay;
    _Bool _shouldHideLoadingForUsingCachedCdnPlayerItem;
    unsigned int _onlineUserCount;
    unsigned int _maxOnlineUserCount;
    unsigned int _liveNewFansCount;
    unsigned int _applyConnectMicCount;
    unsigned int _connectMicSuccCount;
    unsigned int _audienceDelayTime;
    unsigned int _mCdnH265BackCfg;
    unsigned int _cdnQualitySvrcfg;
    unsigned int _lastCdnQuality;
    unsigned int _isEnterroomFisrtTime;
    unsigned int _supportHEVCDec;
    unsigned int _stopLocalConnectMicTime;
    unsigned int _lastTransEventTime;
    int _mMicAbility;
    unsigned int _mCDNSwitchCnt;
    unsigned int _enterRoomTime;
    unsigned int _cdnStartPlayTime;
    unsigned int _lastQualityChangeTime;
    unsigned int _lastSEIReportTime;
    unsigned int _mSEIMode;
    unsigned int _mSEIReportInterval;
    unsigned int _mReTryBackupUrlCnt;
    int _anchorUserTalkingCount;
    unsigned int _mCaptureFps;
    unsigned int _mCaptureResEnum;
    unsigned long long _currentLiveState;
    id <MMLiveTaskDelegate> _delegate;
    LiveInfo *_liveInfo;
    LiveSdkInfo *_liveSdkInfo;
    MMLiveAnchorStatusItem *_anchorStatusItem;
    TRTCParams *_trtcParams;
    LiveSdkVideoParams *_trtcVideoParams;
    LiveSdkAudioParams *_trtcAudioParams;
    LiveSdkChannelParams *_trtcChannelParams;
    TRTCCloudManager *_trtcManager;
    TRTCRemoteUserManager *_remoteUserManager;
    long long _trtcRoleType;
    long long _roleType;
    long long _nextRoleType;
    MMLiveTaskId *_taskId;
    NSString *_sessionId;
    unsigned long long _frontCameraMirrorMode;
    long long _livePlayStatusForAudience;
    long long _livePauseStatus;
    unsigned long long _livePauseTime;
    unsigned long long _liveStartPlayTimeMs;
    unsigned long long _liveRecvIframeTimeMs;
    NSMutableDictionary *_operationReportInfo;
    NSError *_liveError;
    long long _currTransitionState;
    NSString *_currentWeAppId;
    NSString *_conflictWording;
    UINavigationController *_navigationController;
    unsigned long long _userTapOpenLiveTimestamp;
    unsigned long long _beginEnterLiveTimestamp;
    unsigned long long _startCdnPlayTimestamp;
    unsigned long long _cdnPlayerConnectTimestamp;
    unsigned long long _realCdnPlayOkTimestamp;
    unsigned long long _firstShowCdnPlayerViewTimestamp;
    unsigned long long _firstJoinLiveResponseTimestamp;
    MMLiveBeautyLogic *_beautyLogic;
    NSMutableArray *_lagHistoryQueue;
    NSString *_enterLiveLoadingText;
    NSData *_lastSeiMsg;
    NSMutableDictionary *_cdnPlayLevelDict;
    CdnTransInfo *_defaultCdnTransInfo;
    NSString *_recentWeAppId;
    NSString *_liveDescription;
    TRTCCloud *_trtcInstance;
    MMLiveView *_liveView;
    MMTimer *_checkExpireTimer;
    NSString *_mCNDPlayUrl;
    NSMutableDictionary *_remoteUserVideoInfoDict;
    unsigned long long _mCloudAppid;
    unsigned long long _mCloudBizid;
    MMWeEffectManager *_weeffectManager;
    NSMutableDictionary *_cdnPlayUrlDict;
    long long _mCDNSwitchMode;
    UIView *_connectMicUserVideoView;
    NSMutableArray *_connectMicUserInfoListFromAnchorSEIMsg;
    NSMutableDictionary *_lastRecordLiveAudioSessionParams;
    double _lastSEILogTime;
    MMLiveCommentDataRefreshConfig *_commentRefreshConfig;
    NSMutableArray *_cdnPlayClarityArray;
    MMLiveCDNPlayerItem *_cdnPlayerItem;
    struct CGSize _customVideoEncodeResolution;
    struct CGSize _remoteVideoFrameSize;
}

+ (void)updateLastTaskInfoWithLiveId:(unsigned long long)arg1 userType:(long long)arg2;
+ (void)updateCrashAttachInfoWithLiveId:(unsigned long long)arg1 userType:(long long)arg2;
- (void).cxx_destruct;
@property(nonatomic) struct CGSize remoteVideoFrameSize; // @synthesize remoteVideoFrameSize=_remoteVideoFrameSize;
@property(retain, nonatomic) MMLiveCDNPlayerItem *cdnPlayerItem; // @synthesize cdnPlayerItem=_cdnPlayerItem;
@property(copy, nonatomic) NSMutableArray *cdnPlayClarityArray; // @synthesize cdnPlayClarityArray=_cdnPlayClarityArray;
@property(retain, nonatomic) MMLiveCommentDataRefreshConfig *commentRefreshConfig; // @synthesize commentRefreshConfig=_commentRefreshConfig;
@property(nonatomic) _Bool shouldHideLoadingForUsingCachedCdnPlayerItem; // @synthesize shouldHideLoadingForUsingCachedCdnPlayerItem=_shouldHideLoadingForUsingCachedCdnPlayerItem;
@property(nonatomic) _Bool cdnPlayerItemHasEverStartedPlay; // @synthesize cdnPlayerItemHasEverStartedPlay=_cdnPlayerItemHasEverStartedPlay;
@property(nonatomic) double lastSEILogTime; // @synthesize lastSEILogTime=_lastSEILogTime;
@property(nonatomic) _Bool forceHEVCMixing; // @synthesize forceHEVCMixing=_forceHEVCMixing;
@property(nonatomic) _Bool enableSwitchStream; // @synthesize enableSwitchStream=_enableSwitchStream;
@property(nonatomic) unsigned int mCaptureResEnum; // @synthesize mCaptureResEnum=_mCaptureResEnum;
@property(nonatomic) unsigned int mCaptureFps; // @synthesize mCaptureFps=_mCaptureFps;
@property(nonatomic) _Bool hasSetPureAudioModeForAudience; // @synthesize hasSetPureAudioModeForAudience=_hasSetPureAudioModeForAudience;
@property(nonatomic) _Bool hasStartedSyncAnchorSEIUserStatus; // @synthesize hasStartedSyncAnchorSEIUserStatus=_hasStartedSyncAnchorSEIUserStatus;
@property(nonatomic) int anchorUserTalkingCount; // @synthesize anchorUserTalkingCount=_anchorUserTalkingCount;
@property(retain, nonatomic) NSMutableDictionary *lastRecordLiveAudioSessionParams; // @synthesize lastRecordLiveAudioSessionParams=_lastRecordLiveAudioSessionParams;
@property(retain, nonatomic) NSMutableArray *connectMicUserInfoListFromAnchorSEIMsg; // @synthesize connectMicUserInfoListFromAnchorSEIMsg=_connectMicUserInfoListFromAnchorSEIMsg;
@property(nonatomic) unsigned int mReTryBackupUrlCnt; // @synthesize mReTryBackupUrlCnt=_mReTryBackupUrlCnt;
@property(nonatomic) unsigned int mSEIReportInterval; // @synthesize mSEIReportInterval=_mSEIReportInterval;
@property(nonatomic) unsigned int mSEIMode; // @synthesize mSEIMode=_mSEIMode;
@property(nonatomic) unsigned int lastSEIReportTime; // @synthesize lastSEIReportTime=_lastSEIReportTime;
@property(nonatomic) _Bool isPlayerReportExtended; // @synthesize isPlayerReportExtended=_isPlayerReportExtended;
@property(nonatomic) unsigned int lastQualityChangeTime; // @synthesize lastQualityChangeTime=_lastQualityChangeTime;
@property(nonatomic) _Bool isLiveAfterAbnormalExit; // @synthesize isLiveAfterAbnormalExit=_isLiveAfterAbnormalExit;
@property(retain, nonatomic) UIView *connectMicUserVideoView; // @synthesize connectMicUserVideoView=_connectMicUserVideoView;
@property(nonatomic) unsigned int cdnStartPlayTime; // @synthesize cdnStartPlayTime=_cdnStartPlayTime;
@property(nonatomic) unsigned int enterRoomTime; // @synthesize enterRoomTime=_enterRoomTime;
@property(nonatomic) long long mCDNSwitchMode; // @synthesize mCDNSwitchMode=_mCDNSwitchMode;
@property(nonatomic) unsigned int mCDNSwitchCnt; // @synthesize mCDNSwitchCnt=_mCDNSwitchCnt;
@property(retain, nonatomic) NSMutableDictionary *cdnPlayUrlDict; // @synthesize cdnPlayUrlDict=_cdnPlayUrlDict;
@property(retain, nonatomic) MMWeEffectManager *weeffectManager; // @synthesize weeffectManager=_weeffectManager;
@property(nonatomic) _Bool enableCustomEffect; // @synthesize enableCustomEffect=_enableCustomEffect;
@property(nonatomic) unsigned long long mCloudBizid; // @synthesize mCloudBizid=_mCloudBizid;
@property(nonatomic) unsigned long long mCloudAppid; // @synthesize mCloudAppid=_mCloudAppid;
@property(nonatomic) _Bool isAudioParamSetOK; // @synthesize isAudioParamSetOK=_isAudioParamSetOK;
@property(nonatomic) _Bool isVideoParamSetOK; // @synthesize isVideoParamSetOK=_isVideoParamSetOK;
@property(nonatomic) int mMicAbility; // @synthesize mMicAbility=_mMicAbility;
@property(retain, nonatomic) NSMutableDictionary *remoteUserVideoInfoDict; // @synthesize remoteUserVideoInfoDict=_remoteUserVideoInfoDict;
@property(nonatomic) unsigned int lastTransEventTime; // @synthesize lastTransEventTime=_lastTransEventTime;
@property(retain, nonatomic) NSString *mCNDPlayUrl; // @synthesize mCNDPlayUrl=_mCNDPlayUrl;
@property(retain, nonatomic) MMTimer *checkExpireTimer; // @synthesize checkExpireTimer=_checkExpireTimer;
@property(retain, nonatomic) MMLiveView *liveView; // @synthesize liveView=_liveView;
@property(retain, nonatomic) TRTCCloud *trtcInstance; // @synthesize trtcInstance=_trtcInstance;
@property(nonatomic) _Bool isViewCapturing; // @synthesize isViewCapturing=_isViewCapturing;
@property(retain, nonatomic) NSString *liveDescription; // @synthesize liveDescription=_liveDescription;
@property(retain, nonatomic) NSString *recentWeAppId; // @synthesize recentWeAppId=_recentWeAppId;
@property(retain, nonatomic) CdnTransInfo *defaultCdnTransInfo; // @synthesize defaultCdnTransInfo=_defaultCdnTransInfo;
@property(nonatomic) unsigned int stopLocalConnectMicTime; // @synthesize stopLocalConnectMicTime=_stopLocalConnectMicTime;
@property(nonatomic) _Bool ignoreCacheClarity; // @synthesize ignoreCacheClarity=_ignoreCacheClarity;
@property(retain, nonatomic) NSMutableDictionary *cdnPlayLevelDict; // @synthesize cdnPlayLevelDict=_cdnPlayLevelDict;
@property(nonatomic) _Bool isAntiAddictPause; // @synthesize isAntiAddictPause=_isAntiAddictPause;
@property(retain, nonatomic) NSData *lastSeiMsg; // @synthesize lastSeiMsg=_lastSeiMsg;
@property(nonatomic) struct CGSize customVideoEncodeResolution; // @synthesize customVideoEncodeResolution=_customVideoEncodeResolution;
@property(nonatomic) _Bool useCustomVideoEncodeResolution; // @synthesize useCustomVideoEncodeResolution=_useCustomVideoEncodeResolution;
@property(retain, nonatomic) NSString *enterLiveLoadingText; // @synthesize enterLiveLoadingText=_enterLiveLoadingText;
@property(nonatomic) _Bool isHEVCEncUsing; // @synthesize isHEVCEncUsing=_isHEVCEncUsing;
@property(nonatomic) _Bool isHEVCEncEnable; // @synthesize isHEVCEncEnable=_isHEVCEncEnable;
@property(retain, nonatomic) NSMutableArray *lagHistoryQueue; // @synthesize lagHistoryQueue=_lagHistoryQueue;
@property(nonatomic) _Bool isFrontCameraMirrored; // @synthesize isFrontCameraMirrored=_isFrontCameraMirrored;
@property(nonatomic) _Bool isFrontCamera; // @synthesize isFrontCamera=_isFrontCamera;
@property(retain, nonatomic) MMLiveBeautyLogic *beautyLogic; // @synthesize beautyLogic=_beautyLogic;
@property(nonatomic) _Bool isLiveQosControlEnabled; // @synthesize isLiveQosControlEnabled=_isLiveQosControlEnabled;
@property(nonatomic) _Bool isLiveQosReportEnabled; // @synthesize isLiveQosReportEnabled=_isLiveQosReportEnabled;
@property(nonatomic) _Bool isInBackgroundFlag; // @synthesize isInBackgroundFlag=_isInBackgroundFlag;
@property(nonatomic) unsigned int supportHEVCDec; // @synthesize supportHEVCDec=_supportHEVCDec;
@property(nonatomic) unsigned int isEnterroomFisrtTime; // @synthesize isEnterroomFisrtTime=_isEnterroomFisrtTime;
@property(nonatomic) unsigned int lastCdnQuality; // @synthesize lastCdnQuality=_lastCdnQuality;
@property(nonatomic) unsigned int cdnQualitySvrcfg; // @synthesize cdnQualitySvrcfg=_cdnQualitySvrcfg;
@property(nonatomic) unsigned int mCdnH265BackCfg; // @synthesize mCdnH265BackCfg=_mCdnH265BackCfg;
@property(nonatomic) unsigned int audienceDelayTime; // @synthesize audienceDelayTime=_audienceDelayTime;
@property(nonatomic) _Bool useCachedPlayingDataItemWhenEnterLive; // @synthesize useCachedPlayingDataItemWhenEnterLive=_useCachedPlayingDataItemWhenEnterLive;
@property(nonatomic) unsigned long long firstJoinLiveResponseTimestamp; // @synthesize firstJoinLiveResponseTimestamp=_firstJoinLiveResponseTimestamp;
@property(nonatomic) unsigned long long firstShowCdnPlayerViewTimestamp; // @synthesize firstShowCdnPlayerViewTimestamp=_firstShowCdnPlayerViewTimestamp;
@property(nonatomic) unsigned long long realCdnPlayOkTimestamp; // @synthesize realCdnPlayOkTimestamp=_realCdnPlayOkTimestamp;
@property(nonatomic) unsigned long long cdnPlayerConnectTimestamp; // @synthesize cdnPlayerConnectTimestamp=_cdnPlayerConnectTimestamp;
@property(nonatomic) unsigned long long startCdnPlayTimestamp; // @synthesize startCdnPlayTimestamp=_startCdnPlayTimestamp;
@property(nonatomic) unsigned long long beginEnterLiveTimestamp; // @synthesize beginEnterLiveTimestamp=_beginEnterLiveTimestamp;
@property(nonatomic) unsigned long long userTapOpenLiveTimestamp; // @synthesize userTapOpenLiveTimestamp=_userTapOpenLiveTimestamp;
@property(retain, nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) NSString *conflictWording; // @synthesize conflictWording=_conflictWording;
@property(retain, nonatomic) NSString *currentWeAppId; // @synthesize currentWeAppId=_currentWeAppId;
@property(nonatomic) _Bool isEnableComment; // @synthesize isEnableComment=_isEnableComment;
@property(nonatomic) long long currTransitionState; // @synthesize currTransitionState=_currTransitionState;
@property(retain, nonatomic) NSError *liveError; // @synthesize liveError=_liveError;
@property(retain, nonatomic) NSMutableDictionary *operationReportInfo; // @synthesize operationReportInfo=_operationReportInfo;
@property(nonatomic) unsigned int connectMicSuccCount; // @synthesize connectMicSuccCount=_connectMicSuccCount;
@property(nonatomic) unsigned int applyConnectMicCount; // @synthesize applyConnectMicCount=_applyConnectMicCount;
@property(nonatomic) _Bool isRulePoped; // @synthesize isRulePoped=_isRulePoped;
@property(nonatomic) unsigned int liveNewFansCount; // @synthesize liveNewFansCount=_liveNewFansCount;
@property(nonatomic) unsigned int maxOnlineUserCount; // @synthesize maxOnlineUserCount=_maxOnlineUserCount;
@property(nonatomic) unsigned int onlineUserCount; // @synthesize onlineUserCount=_onlineUserCount;
@property(nonatomic) _Bool isAllowSettingBGMusic; // @synthesize isAllowSettingBGMusic=_isAllowSettingBGMusic;
@property(nonatomic) _Bool isPureAudioMode; // @synthesize isPureAudioMode=_isPureAudioMode;
@property(nonatomic) _Bool isMicMuted; // @synthesize isMicMuted=_isMicMuted;
@property(nonatomic) _Bool isBanLikeStatusChanged; // @synthesize isBanLikeStatusChanged=_isBanLikeStatusChanged;
@property(nonatomic) _Bool isPreBanLike; // @synthesize isPreBanLike=_isPreBanLike;
@property(nonatomic) _Bool isPreBanComment; // @synthesize isPreBanComment=_isPreBanComment;
@property(nonatomic) _Bool isAllowConnectMic; // @synthesize isAllowConnectMic=_isAllowConnectMic;
@property(nonatomic) _Bool isAllowLiveReward; // @synthesize isAllowLiveReward=_isAllowLiveReward;
@property(readonly, nonatomic) _Bool isOnlineStateButtonDisabled; // @synthesize isOnlineStateButtonDisabled=_isOnlineStateButtonDisabled;
@property(nonatomic) _Bool isUsingCamera; // @synthesize isUsingCamera=_isUsingCamera;
@property(nonatomic) _Bool isVideoConnectedMic; // @synthesize isVideoConnectedMic=_isVideoConnectedMic;
@property(nonatomic) _Bool isAnchorOpenAfterCrash; // @synthesize isAnchorOpenAfterCrash=_isAnchorOpenAfterCrash;
@property(nonatomic) unsigned long long liveRecvIframeTimeMs; // @synthesize liveRecvIframeTimeMs=_liveRecvIframeTimeMs;
@property(nonatomic) unsigned long long liveStartPlayTimeMs; // @synthesize liveStartPlayTimeMs=_liveStartPlayTimeMs;
@property(nonatomic) unsigned long long livePauseTime; // @synthesize livePauseTime=_livePauseTime;
@property(nonatomic) long long livePauseStatus; // @synthesize livePauseStatus=_livePauseStatus;
@property(nonatomic) long long livePlayStatusForAudience; // @synthesize livePlayStatusForAudience=_livePlayStatusForAudience;
@property(nonatomic) _Bool isReleaseMonoService; // @synthesize isReleaseMonoService=_isReleaseMonoService;
@property(nonatomic) _Bool isLiveMuteForOuter; // @synthesize isLiveMuteForOuter=_isLiveMuteForOuter;
@property(nonatomic) _Bool isLiveMuteForSysIntterupt; // @synthesize isLiveMuteForSysIntterupt=_isLiveMuteForSysIntterupt;
@property(nonatomic) _Bool isLiveMuteForIntterupt; // @synthesize isLiveMuteForIntterupt=_isLiveMuteForIntterupt;
@property(nonatomic) _Bool isLiveUnablePlay; // @synthesize isLiveUnablePlay=_isLiveUnablePlay;
@property(nonatomic) _Bool isLivePaused; // @synthesize isLivePaused=_isLivePaused;
@property(nonatomic) _Bool isTakingLivePhoto; // @synthesize isTakingLivePhoto=_isTakingLivePhoto;
@property(nonatomic) _Bool isFaceVerifying; // @synthesize isFaceVerifying=_isFaceVerifying;
@property(nonatomic) _Bool isLiveClosed; // @synthesize isLiveClosed=_isLiveClosed;
@property(nonatomic) unsigned long long frontCameraMirrorMode; // @synthesize frontCameraMirrorMode=_frontCameraMirrorMode;
@property(nonatomic) _Bool isLocalAudioStarted; // @synthesize isLocalAudioStarted=_isLocalAudioStarted;
@property(nonatomic) _Bool isLivePlayingViaCdn; // @synthesize isLivePlayingViaCdn=_isLivePlayingViaCdn;
@property(nonatomic) _Bool isDefaultCDNPlay; // @synthesize isDefaultCDNPlay=_isDefaultCDNPlay;
@property(retain, nonatomic) NSString *sessionId; // @synthesize sessionId=_sessionId;
@property(retain, nonatomic) MMLiveTaskId *taskId; // @synthesize taskId=_taskId;
@property(nonatomic) _Bool isInRoom; // @synthesize isInRoom=_isInRoom;
@property(nonatomic) _Bool isScreenLive; // @synthesize isScreenLive=_isScreenLive;
@property(nonatomic) long long nextRoleType; // @synthesize nextRoleType=_nextRoleType;
@property(nonatomic) long long roleType; // @synthesize roleType=_roleType;
@property(nonatomic) long long trtcRoleType; // @synthesize trtcRoleType=_trtcRoleType;
@property(retain, nonatomic) TRTCRemoteUserManager *remoteUserManager; // @synthesize remoteUserManager=_remoteUserManager;
@property(retain, nonatomic) TRTCCloudManager *trtcManager; // @synthesize trtcManager=_trtcManager;
@property(retain, nonatomic) LiveSdkChannelParams *trtcChannelParams; // @synthesize trtcChannelParams=_trtcChannelParams;
@property(retain, nonatomic) LiveSdkAudioParams *trtcAudioParams; // @synthesize trtcAudioParams=_trtcAudioParams;
@property(retain, nonatomic) LiveSdkVideoParams *trtcVideoParams; // @synthesize trtcVideoParams=_trtcVideoParams;
@property(retain, nonatomic) TRTCParams *trtcParams; // @synthesize trtcParams=_trtcParams;
@property(retain, nonatomic) MMLiveAnchorStatusItem *anchorStatusItem; // @synthesize anchorStatusItem=_anchorStatusItem;
@property(retain, nonatomic) LiveSdkInfo *liveSdkInfo; // @synthesize liveSdkInfo=_liveSdkInfo;
@property(retain, nonatomic) LiveInfo *liveInfo; // @synthesize liveInfo=_liveInfo;
@property(nonatomic) __weak id <MMLiveTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool secondaryDeviceCloseLiveSwitch; // @synthesize secondaryDeviceCloseLiveSwitch=_secondaryDeviceCloseLiveSwitch;
@property(nonatomic) unsigned long long currentLiveState; // @synthesize currentLiveState=_currentLiveState;
@property(retain, nonatomic) MMLiveManger *liveManagerInstance; // @synthesize liveManagerInstance=_liveManagerInstance;
- (id)getRecentClarityChooseFromCache;
- (unsigned long long)liveRoomSwitchStream:(id)arg1;
- (void)onRequestSynchronzizeInfoForSEIAnchorInfo:(id)arg1;
- (void)onSynchronizedSEIAnchoInfo:(id)arg1;
- (void)onLiveAnchorSEISynchronizeRegistered:(id)arg1;
@property(readonly, nonatomic) _Bool isCaptureRes1920x1440Enable;
@property(readonly, nonatomic) _Bool isLiveAudienceDisplayMode;
@property(readonly, nonatomic) _Bool isLiveAnchorMainDisplayMode;
@property(readonly, nonatomic) unsigned int livePlayTime;
@property(readonly, nonatomic) unsigned int liveStartPlayTime;
- (_Bool)canCheckConnectMicForiPad;
- (_Bool)isLiveVideoLocalHorizontal;
- (_Bool)isLiveVideoRemoteValid;
- (unsigned long long)currentLiveVideoDisplayScene;
- (_Bool)shouldSupportRotateOrientationIgnoreMinimizeMode:(_Bool)arg1;
- (_Bool)shouldSupportRotateOrientation;
- (id)createLiveViewWithFrame:(struct CGRect)arg1 andTaskId:(id)arg2 andDelegate:(id)arg3;
@property(readonly, nonatomic) unsigned int liveStartTime;
@property(readonly, nonatomic) unsigned long long currentLiveScene;
- (void)willStartLocalAudio;
- (void)updateVideoSize:(struct CGSize)arg1;
- (void)updateMainRemoteViewForOrientationChanged;
- (void)updateMainRemoteViewFillMode;
- (id)remoteUserVideoInfoForUserId:(id)arg1 autoCreate:(_Bool)arg2;
- (id)remoteUserVideoInfoForUserId:(id)arg1;
- (void)switchToNewQuality:(int)arg1;
- (void)clearSeiConnectMicUserInfoList;
@property(readonly, nonatomic) NSArray *seiConnectMicUserInfoList;
- (void)checkAndParseConnectMicDataFromCommonSEIMsg:(id)arg1;
- (void)notifySubTitleJsonInfo:(id)arg1;
- (void)onNetStatus:(id)arg1;
- (void)logForSEIData:(id)arg1;
- (void)onPlayEvent:(int)arg1 withParam:(id)arg2;
- (void)checkSvrIPOrPlayHttps:(id)arg1;
- (id)getCurrentFinderName;
- (void)sendOneWayDelayReport:(id)arg1 evtID:(int)arg2;
- (void)sendGameSEIReport:(id)arg1 evtID:(int)arg2;
- (void)onMMLiveViewConnectMicStateChanged;
- (void)onMMLiveViewStopRemoteViewWithSdkUserId:(id)arg1;
- (void)onMMLiveViewStartRemoteViewWithSdkUserId:(id)arg1 andView:(id)arg2;
- (id)onMMLiveViewGetAnchorIdentityId;
- (_Bool)onMMLiveViewIsAudience;
- (void)onMMLiveViewStartLocalVideo;
- (void)onMMLiveViewSwitchCamera;
- (void)liveManager:(id)arg1 didFinishCollectingCaptureMetrics:(id)arg2;
- (void)onAudioEffectFinished:(int)arg1 code:(int)arg2;
- (void)onSetMixTranscodingConfig:(int)arg1 errMsg:(id)arg2;
- (void)onRecvSEIMsg:(id)arg1 message:(id)arg2;
- (void)onRecvCustomCmdMsgUserId:(id)arg1 cmdID:(long long)arg2 seq:(unsigned int)arg3 message:(id)arg4;
- (void)onUserVoiceVolume:(id)arg1 totalVolume:(long long)arg2;
- (void)onAudioRouteChanged:(long long)arg1 fromRoute:(long long)arg2;
- (void)onStatistics:(id)arg1;
- (void)onNetworkQuality:(id)arg1 remoteQuality:(id)arg2;
- (void)onFirstVideoFrame:(id)arg1 streamType:(long long)arg2 width:(int)arg3 height:(int)arg4;
- (void)onUserSubStreamAvailable:(id)arg1 available:(_Bool)arg2;
- (void)handleRemoteSdkUserMediaDataAvailableChanged;
- (void)onUserVideoAvailable:(id)arg1 available:(_Bool)arg2;
- (void)onUserAudioAvailable:(id)arg1 available:(_Bool)arg2;
- (void)handleRemoteSdkUserLeaveRoom;
- (void)onRemoteUserLeaveRoom:(id)arg1 reason:(long long)arg2;
- (void)onRemoteUserEnterRoom:(id)arg1;
- (void)onDisconnectOtherRoom:(int)arg1 errMsg:(id)arg2;
- (void)onConnectOtherRoom:(id)arg1 errCode:(int)arg2 errMsg:(id)arg3;
- (void)onSwitchRole:(int)arg1 errMsg:(id)arg2;
- (void)onExitRoom:(long long)arg1;
- (void)onEnterRoom:(long long)arg1;
- (void)onWarning:(int)arg1 warningMsg:(id)arg2 extInfo:(id)arg3;
- (void)onError:(int)arg1 errMsg:(id)arg2 extInfo:(id)arg3;
- (void)onWarning:(int)arg1 warningMsg:(id)arg2;
- (void)notifyLiveSdkInfoWillExpire;
- (void)startKeyUpdateTimer:(unsigned long long)arg1;
- (void)stopKeyUpdateTimer;
- (void)onSwitchRoleCallBack:(int)arg1 errMsg:(id)arg2;
- (void)reTryPlayBackupUrl;
- (void)checkAndRestoreLiveAudioParams;
- (void)recordCurrentLiveAudioParams;
- (void)changeToCategoryPlayback;
- (void)checkAndChangeCategory;
- (_Bool)cdnPlayerItemHasPlayedOK;
- (void)generateCdnPlayerItem;
- (void)checkAndUpdateCdnPlayerEventParams;
- (void)checkAndUpdateCdnPlayerEventParamsAfterDelay;
- (void)clearDataForAudienceSwitchCdnOrTrtcMode;
- (void)switchCdnOrTrtcPlay:(_Bool)arg1;
- (void)clearEffectFilter;
- (void)setEffectFilterV2:(id)arg1 alpha:(double)arg2;
- (void)setEffectFilter:(id)arg1 alpha:(double)arg2;
- (void)setEffectSkinBright:(float)arg1 skinSmooth:(float)arg2 lutRosy:(float)arg3 lutColor:(float)arg4 faceThin:(float)arg5 eyeBigger:(float)arg6 eyeBright:(float)arg7;
- (void)initEffectWithDefaultParam;
- (void)initFaceBeautyParam;
- (int)getBeautySceneType;
- (void)sendSEIMessageData:(id)arg1;
- (void)refreshViewCaptureConfigurations;
- (void)resumeViewCapture;
- (void)pauseViewCapture;
- (void)stopViewCapture;
- (void)startViewCaptureWithView:(id)arg1;
- (void)updateIsViewCapturingForAudience:(_Bool)arg1;
- (void)stopPlayMusic:(id)arg1;
- (void)resumePlayMusic:(id)arg1;
- (void)pausePlayMusic:(id)arg1;
- (void)playMusic:(id)arg1 publish:(_Bool)arg2 startBlock:(CDUnknownBlockType)arg3 progressBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)enableLivePlayingForAudience;
- (void)unableLivePlayingForAudience;
- (id)pauseTimeCachedKey;
- (id)pauseStatusCachedKey;
- (void)innerResumeLiveForAudience;
- (void)innerPauseLiveForAudience;
- (void)refreshPauseLiveForAudience;
- (_Bool)resumeLive;
- (_Bool)prepareResumeLive;
- (_Bool)pauseLive:(long long)arg1;
- (_Bool)pauseLive;
- (void)refreshCoverImageVisible;
- (void)enableAudioVolumeEvaluation:(unsigned long long)arg1;
- (void)setVideoEncoderParamWithWidth:(double)arg1 height:(double)arg2;
- (void)mixExternalAudioData:(id)arg1 sampleRate:(long long)arg2 channels:(int)arg3 timestampMs:(unsigned long long)arg4;
- (void)enableMixExternalAudio:(_Bool)arg1 playout:(_Bool)arg2;
- (void)switchVideoSourceTo:(unsigned long long)arg1;
- (void)sendCustomAudioData:(id)arg1 sampleRate:(long long)arg2 channels:(int)arg3 timestampMs:(unsigned long long)arg4;
- (void)enableCustomAudioCapture:(_Bool)arg1;
- (void)sendCustomVideoData:(id)arg1 pixelFormat:(long long)arg2 rotation:(long long)arg3 timestampMs:(unsigned long long)arg4 width:(double)arg5 height:(double)arg6;
- (void)sendCustomVideoData:(struct __CVBuffer *)arg1 pixelFormat:(long long)arg2 rotation:(long long)arg3 timestampMs:(unsigned long long)arg4;
- (void)setExperimentConfig:(id)arg1 params:(id)arg2;
- (void)enterRoomLocalCaptureDisabled:(_Bool)arg1;
- (void)enableCustomVideoCapture:(_Bool)arg1;
- (void)updateIsPureAudioMode:(_Bool)arg1 showTip:(_Bool)arg2;
- (void)unRegisterExtension;
- (void)registerExtension;
- (void)checkAndUpdateFirstShowCdnPlayerViewTimestamp;
- (void)didFirstJoinLiveOk;
- (void)didFirstCdnPlayOk;
- (void)clearReportTimer;
- (void)stopReportTimer;
- (void)startReportTimer;
- (_Bool)isFinderLive;
- (void)reportPlayerEvent:(id)arg1 evtId:(int)arg2 evtMsg:(id)arg3;
- (_Bool)canChangeAudioQuality;
- (void)startCdnPlayOrEnterLiveRoom;
- (_Bool)updateAllRemoteUsersAudioMuted:(_Bool)arg1;
- (_Bool)unmuteCdnPlayer;
- (_Bool)muteCdnPlayer;
- (void)resumeCdnPlayer;
- (void)pauseCdnPlayer;
- (void)releaseCdnPlayer;
- (void)stopCdnPlayer;
- (void)setDefalutPlayMode:(_Bool)arg1;
- (void)stopLocalConnectRoom;
- (void)localConnectRoom:(id)arg1 withUserId:(id)arg2 andPkSign:(id)arg3;
- (void)updateConnectMicUserVideoView:(id)arg1;
- (void)unmuteVideoForConnectMic;
- (void)startLocalVideoForConnectMicWithVideoView:(id)arg1;
- (void)stopVideoForConnectMic;
- (void)startSendVideoForConnectMic;
- (void)startLocalVideoForConnectMic;
- (void)stopLocalConnectMic;
- (void)localConnectMicWithVideo:(_Bool)arg1 liveSdkInfo:(id)arg2;
- (void)localConnectMic;
- (void)exitLiveRoom;
- (_Bool)canEnableLocalCapture;
- (void)enterLiveRoom;
- (id)getTrtcRemoteUserConfig:(id)arg1;
- (void)setTrtcUser:(id)arg1 isAudioMuted:(_Bool)arg2;
- (void)setTrtcUser:(id)arg1 isVideoMuted:(_Bool)arg2;
- (void)setTrtcUser:(id)arg1 isAudioEnabled:(_Bool)arg2;
- (void)setTrtcUser:(id)arg1 isVideoEnabled:(_Bool)arg2;
- (id)micMutedCachedKey;
- (void)setRemoteMirrorEnabled:(_Bool)arg1;
- (void)setVoiceVolume:(long long)arg1;
- (void)setMicMuted:(_Bool)arg1;
- (void)setAudioMuted:(_Bool)arg1;
- (void)setAudioEnabled:(_Bool)arg1;
- (void)setVideoMuteImage:(id)arg1 fps:(long long)arg2;
- (void)checkAndUpdateVideoMuteImageForAudioMode;
- (void)setVideoMuted:(_Bool)arg1;
- (void)setVideoEnabled:(_Bool)arg1;
- (void)updateTRTCCloudMixtureParams;
- (id)getCdnUrlOfMixing;
- (_Bool)clearLiveSdkInfo;
- (void)updateTrtcPrivateMapKey:(id)arg1;
- (void)setCameraPreviewOrientation;
- (void)updateVideoEncoderResMode;
- (void)updateLiveSDKAVParams:(id)arg1 audioParams:(id)arg2;
- (_Bool)isHEVCEncSupportedLocal;
- (void)setTRTCHevcEncode:(_Bool)arg1;
- (_Bool)updateLiveSdkInfo:(id)arg1;
- (_Bool)isClarityArrayContains:(id)arg1 cdnPlayClarityArray:(id)arg2;
- (_Bool)updateLiveSdkInfo:(id)arg1 liveInfo:(id)arg2;
- (_Bool)checkIsConnectMicVideoAllowed;
- (_Bool)checkIsConnectMicAudioAllowed;
- (void)updateEnableComment:(_Bool)arg1;
- (void)updateAnchorStatus:(id)arg1;
- (void)updateLiveInfo:(id)arg1;
- (_Bool)isTrtcAnchor;
- (_Bool)shouldForbidLandScapeForIphone;
- (void)switchRoleType:(long long)arg1;
- (void)stopRemoteViewWithUserId:(id)arg1;
- (void)startRemoteViewWithUserId:(id)arg1;
- (void)stopLocalVideo;
- (void)updateCameraConfigs;
@property(readonly, nonatomic) _Bool isEnableHQByDevice;
- (void)startLocalVideoWithView:(id)arg1;
- (void)startLocalVideo;
@property(readonly, nonatomic) NSString *anchorSdkUserId;
- (_Bool)sdkUserIsAnchor:(id)arg1;
- (void)switchCaptureSource;
- (void)checkPauseStatusCachedValue;
- (void)updatePauseStatusCachedValue;
- (void)checkMicMutedCachedValue;
- (void)updateMicMutedCachedValue;
- (void)checkCachedValueAndSwitchCamera;
- (void)updateCameraModeCachedValue;
- (void)initAbnormalState;
- (id)lastCameraModeCachedKey;
- (void)initBeautyLogic;
- (void)updateMirrorMode;
- (void)switchMirrorMode;
- (void)switchCamera;
- (void)initTrtcManager:(_Bool)arg1;
- (long long)trtcRoleTypeFromMMLiveRoleType:(long long)arg1;
- (id)getConflictWording;
- (void)showConflictAlertForLiving;
- (_Bool)handleConflictForCollapseMinimizeWindowWithNewFinderDataItems:(id)arg1 selectedIndex:(id)arg2 navigationController:(id)arg3 tabType:(int)arg4 commentScene:(unsigned long long)arg5;
- (_Bool)handleConflictForShowMinimizeWindowWithNewFinderDataItems:(id)arg1 selectedIndex:(id)arg2 navigationController:(id)arg3 tabType:(int)arg4 commentScene:(unsigned long long)arg5;
- (_Bool)handleConflictWithNewFinderDataItems:(id)arg1 selectedIndex:(id)arg2 navigationController:(id)arg3 tabType:(int)arg4 commentScene:(unsigned long long)arg5;
- (_Bool)handleConflictWithNewLive:(id)arg1 navigationController:(id)arg2;
- (_Bool)resolveExternalConflicts;
- (_Bool)resolveConflictsWithLiveTask:(id)arg1 navigationController:(id)arg2 maximizeLiveBlock:(CDUnknownBlockType)arg3 switchLiveBlock:(CDUnknownBlockType)arg4;
- (void)updateCommentRefreshControl;
- (_Bool)isSameToTask:(id)arg1;
@property(nonatomic) unsigned long long liveId; // @dynamic liveId;
@property(readonly, copy, nonatomic) NSString *anchorIdentityId; // @dynamic anchorIdentityId;
@property(readonly, nonatomic) _Bool isAudience;
@property(readonly, nonatomic) _Bool isAnchor;
- (_Bool)enableCreateTrtcInstance;
- (_Bool)checkTaskType:(Class)arg1;
- (void)updateTrtcRoleType;
- (void)clearSharedIntance;
- (void)dealloc;
- (void)initFrontCameraMirrorMode;
- (_Bool)canEnableCustomEffect;
- (id)createNewTaskId;
- (id)initWithRoleType:(long long)arg1 liveId:(unsigned long long)arg2 andAnchorId:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

